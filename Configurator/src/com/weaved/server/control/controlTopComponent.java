/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.weaved.server.control;

import com.weaved.main.WeavedMain;
import com.weaved.perception.model.main.PercpModelFacade;
import com.weaved.server.xml.elements.PerceptionHierarchyNode;
import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import org.netbeans.api.progress.ProgressHandle;
import org.netbeans.api.progress.ProgressHandleFactory;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.RequestProcessor;
import org.openide.windows.WindowManager;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//com.weaved.server.control//control//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "controlTopComponent",
iconBase = "com/weaved/server/summary/icon_16.png",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.weaved.server.control.controlTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_controlAction",
preferredID = "controlTopComponent")
@Messages({
    "CTL_controlAction=control",
    "CTL_controlTopComponent=Control",
    "HINT_controlTopComponent=This is a control window"
})
public final class controlTopComponent extends TopComponent {

    public static int countRound = 0;
    public WeavedMain weavedMain;
    public static PercpModelFacade PERCEP_MODEL_FACADE;

    public controlTopComponent() {
        initComponents();
        setName(Bundle.CTL_controlTopComponent());
        setToolTipText(Bundle.HINT_controlTopComponent());

        setLayout(new BorderLayout());

        add(controlPanel, BorderLayout.SOUTH);
        add(buttonPanel, BorderLayout.CENTER);




    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        featureExtractButton = new javax.swing.JButton();
        runIkaslButton = new javax.swing.JButton();
        generateLinkButton = new javax.swing.JButton();
        visualizeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        progressLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        org.openide.awt.Mnemonics.setLocalizedText(featureExtractButton, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.featureExtractButton.text")); // NOI18N
        featureExtractButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                featureExtractorMouseEnter(evt);
            }
        });
        featureExtractButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                featureExtractButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(runIkaslButton, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.runIkaslButton.text")); // NOI18N
        runIkaslButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                runIkaslButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                runIkaslMouseEnter(evt);
            }
        });
        runIkaslButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runIkaslButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(generateLinkButton, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.generateLinkButton.text")); // NOI18N
        generateLinkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                generateLinksMouseEnter(evt);
            }
        });
        generateLinkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateLinkButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(visualizeButton, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.visualizeButton.text")); // NOI18N
        visualizeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                visualizeMouseEnter(evt);
            }
        });
        visualizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizeButtonActionPerformed(evt);
            }
        });

        descriptionTextPane.setEditable(false);
        descriptionTextPane.setBackground(java.awt.SystemColor.control);
        descriptionTextPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        descriptionTextPane.setContentType("text/html"); // NOI18N
        descriptionTextPane.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        descriptionTextPane.setCaretColor(new java.awt.Color(102, 102, 255));
        descriptionTextPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(descriptionTextPane);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/weaved/server/control/weave-D logo_small.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(progressLabel, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.progressLabel.text")); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/weaved/server/control/down_arrow.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.jLabel2.text")); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/weaved/server/control/down_arrow.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.jLabel3.text")); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/weaved/server/control/down_arrow.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(controlTopComponent.class, "controlTopComponent.jLabel4.text")); // NOI18N

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(featureExtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(runIkaslButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(generateLinkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(visualizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(progressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(featureExtractButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runIkaslButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(generateLinkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(visualizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(buttonPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(buttonPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(progressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TopComponent tc = WindowManager.getDefault().findTopComponent("runtimeTopComponent");

        if (tc != null) {
            tc.open();
            tc.requestActive();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void featureExtractorMouseEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_featureExtractorMouseEnter
        // TODO add your handling code here:
        descriptionTextPane.setText("<html><div style=\"font-family:arial;font-size:14px;\"><b>Extract Features</b> <br/><br/>"
                + "By clicking extract features, you'll be presented with a screen which can extract features from raw data(i.e. Images, Text). For example, the tool can extract information about color existence, color proportion and color position for images.</div></html>");
    }//GEN-LAST:event_featureExtractorMouseEnter

    private void runIkaslMouseEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runIkaslMouseEnter
        // TODO add your handling code here:
        descriptionTextPane.setText("<html><div style=\"font-family:arial;font-size:14px;\"><b>Learn Incrementally </b> <br/><br/>By clicking \"Learn Incrementally\", Weave-D will learn about the provided data, using the feature extractors created by clicking \"Extract Features\". Weave-D uses a state of the art neural network algorithm which is capable of incremental learning. Unlike the knowledge acquiring tools available in the market, Weave-D retains past knowledge and does not forget past information because of the new knowledge.</div></html>");
    }//GEN-LAST:event_runIkaslMouseEnter

    private void generateLinksMouseEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generateLinksMouseEnter
        // TODO add your handling code here:
        descriptionTextPane.setText("<html><div style=\"font-family:arial;font-size:14px;\"><b>Generate Links</b> <br/><br/>Generate Links, generates relationships across various types of data (e.g. Images and Text) With the generated links user can see how data is related to each other. For example, horizontal links are capable of extracting how clusters of different features are inter-related. For example, by looking at the acquired knowledge, these links are capable of identifying images clustered together in both color existence and color proportion. Furthermore, vertical links are capable of extracting how patterns in data change over time. For example, by looking at the acquired knowledge, these links can say that a green-dominant cluster in images has later turned into a green-brown-dominant cluster.</div></html>");
    }//GEN-LAST:event_generateLinksMouseEnter

    private void visualizeMouseEnter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_visualizeMouseEnter
        // TODO add your handling code here:
        descriptionTextPane.setText("<html><div style=\"font-family:arial;font-size:14px;\"><b>Visualize</b> <br/><br/>\"Visualize\" provides an intuitive visualization of the acquired knowledge. For example visualization experience provided by the tool comprise of a 3D easy-to-explore visualization. User can pan,zoom and rotate in order to easily analyze the data structure.</div></html>");
    }//GEN-LAST:event_visualizeMouseEnter

    private void visualizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizeButtonActionPerformed
        try {
            // TODO add your handling code here:
//            Runtime.getRuntime().exec("java -jar C:\\Users\\BUDDHIMA\\Documents\\NetBeansProjects\\Arena\\dist\\Arena.jar C:\\Users\\BUDDHIMA\\Documents\\NetBeansProjects\\Arena\\nbqsa.txt");
            if (countRound > 4) {
                countRound = 4;// correct mistakenly clicks
            }
            Runtime.getRuntime().exec("java -jar C:\\Users\\BUDDHIMA\\Documents\\NetBeansProjects\\Arena\\dist\\Arena.jar C:\\Users\\BUDDHIMA\\Documents\\NetBeansProjects\\Arena\\nbqsa" + countRound + ".txt");
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_visualizeButtonActionPerformed

    private void runIkaslButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runIkaslButtonActionPerformed

        weavedMain = new WeavedMain();
        weavedMain.runIKASL();
        JOptionPane.showMessageDialog(this, "IKASL Run Successfully");
        // TODO add your handling code here:
           /* final Runnable run1 = new Runnable() {
         @Override
         public void run() {
         ProgressHandle p = ProgressHandleFactory.createHandle("My Task");

         p.start(100);

         p.progress("Step 1", 10);
         p.progress("Step 1", 10);
         p.progress("Step 1", 10);
         // do next work


         p.progress("Step 1", 10);
         p.progress("Step 1", 10);
         p.progress("Step 1", 10);
         p.progress(100);
         p.finish();
         }
         };

         Thread t = new Thread(run1);
         t.start(); // start the task and progress visualisation
         //        RequestProcessor.getDefault().post(run);
         System.out.println("Clicked");*/





//        configProgressBar.setVisible(true);

//        configProgressBar.setValue(20);
//        progressLabel.setText("Start Learning ....");

//        JFrame processingFrame = new ProcessingForm();
//
//
//        processingFrame.setVisible(true);
//
//        try {
//            Thread.sleep(1500);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
////
//        processingFrame.setVisible(false);
//
//        // increase count
        countRound++;
    }//GEN-LAST:event_runIkaslButtonActionPerformed

    private void featureExtractButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_featureExtractButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Runtime.getRuntime().exec("java -jar C:\\Users\\BUDDHIMA\\Desktop\\FeatureExtractors\\FeatureExtractor.jar");
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_featureExtractButtonActionPerformed

    private void generateLinkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateLinkButtonActionPerformed
        weavedMain.runLinkGenerator();
        PERCEP_MODEL_FACADE= weavedMain.getPercpModelFacade();
        JOptionPane.showMessageDialog(this, "Link Generation Successfull");
        // TODO add your handling code here:
//        progressLabel.setText("Reading Hiararchy ....");
//
//        try {
//            Thread.sleep(1500);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
//
//        progressLabel.setText("Generating Links ....");
////        configProgressBar.setValue(100);
//
//        try {
//            Thread.sleep(2000);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
//        progressLabel.setText("Link Generation done ....");
//
//        try {
//            Thread.sleep(1000);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
//        progressLabel.setText("");
//        JOptionPane.showMessageDialog(null, "Links Generated!");
////        configProgressBar.setVisible(false);


//        JFrame processingFrame = new ProcessingForm();
//
//
//        processingFrame.setVisible(true);
//
//        try {
//            Thread.sleep(1500);
//        } catch (InterruptedException ex) {
//            Exceptions.printStackTrace(ex);
//        }
////
//        processingFrame.setVisible(false);
    }//GEN-LAST:event_generateLinkButtonActionPerformed

    private void runIkaslButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_runIkaslButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_runIkaslButtonMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JTextPane descriptionTextPane;
    private javax.swing.JButton featureExtractButton;
    private javax.swing.JButton generateLinkButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JButton runIkaslButton;
    private javax.swing.JButton visualizeButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
